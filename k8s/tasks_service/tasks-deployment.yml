apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-deployment
  labels:
    app: tasks
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tasks
  template:
    metadata:
      labels:
        app: tasks
    spec:
      containers:
      - name: tasks-container
        image: moabdelazem/microservices-tasks:latest
        ports:
        - containerPort: 3002
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: DB_USER
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: DB_NAME
        - name: DB_SSLMODE
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: DB_SSLMODE
        - name: RABBITMQ_URL
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: RABBITMQ_URL
        - name: RABBITMQ_EXCHANGE
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: RABBITMQ_EXCHANGE
        - name: RABBITMQ_QUEUE
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: RABBITMQ_QUEUE
        - name: CLIENT_URL
          valueFrom:
            configMapKeyRef:
              name: tasks-config
              key: CLIENT_URL
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tasks-secrets
              key: DB_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: tasks-secrets
              key: JWT_SECRET
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        imagePullPolicy: Always